{"version":3,"file":"static/js/873.b267e41b.chunk.js","mappings":"8KACA,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,QAAU,0B,mBCerJ,EAN4C,SAAC,GAAe,IAAdA,EAAa,EAAbA,KAAKC,EAAQ,EAARA,GAC/C,OACI,gBAAKC,UAAWC,EAAAA,OAAhB,UAA0B,SAAC,KAAD,CAASC,GAAE,mBAAcH,GAAzB,SAAgCD,OCGlE,EANgB,SAACK,GACb,OACI,gBAAKH,UAAWC,EAAAA,QAAhB,SAA4BE,EAAMC,gB,iDCyCpCC,GAAQC,EAAAA,EAAAA,GAAiB,KAkBzBC,GAAsBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,wBAA/BD,EAjBsC,SAACL,GAC/D,OACI,kBAAMO,SAAUP,EAAMQ,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAgBX,GAC3BP,KAAM,cACNmB,YAAa,0BAGxB,0BACI,SAACC,EAAA,EAAD,CAAQC,KAAM,SAAd,0BAQhB,EAtDiC,SAAChB,GAE9B,IACIiB,EAIAjB,EAJAiB,YACAC,EAGAlB,EAHAkB,QACAC,EAEAnB,EAFAmB,SAIAC,GAFApB,EADAqB,eAGUH,EAAQI,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAA4B5B,KAAM4B,EAAO5B,KAAMC,GAAI2B,EAAO3B,IAAzC2B,EAAO3B,QACxD4B,EAAWL,EAASG,KAAI,SAAAG,GAAC,OAAI,SAAC,EAAD,CAAoBxB,aAAcwB,EAAEC,QAAS9B,GAAI6B,EAAE7B,IAArC6B,EAAE7B,OAMjD,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,YAAhB,SACKsB,KAEL,iBAAKvB,UAAWC,EAAAA,aAAhB,WACI,yBAAM0B,KACN,SAACpB,EAAD,CAAqBG,SAXlB,SAACoB,GACZV,EAAYU,EAAOC,uB,8BCE3B,GAAeC,E,QAAAA,IACXC,EAAAA,GACAC,EAAAA,EAAAA,KApBoB,SAACC,GACrB,MAAO,CACHd,QAASc,EAAMC,aAAaf,QAC5BC,SAAUa,EAAMC,aAAad,SAC7BE,eAAgBW,EAAMC,aAAaC,mBAGhB,SAACC,GACxB,MAAO,CACHlB,YAAa,SAACW,GACVO,GAASC,EAAAA,EAAAA,GAAcR,SAQnC,CAGCR","sources":["webpack://way-samurai-01/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__-hWrk\",\"listDialogs\":\"Dialogs_listDialogs__yyszf\",\"listMessages\":\"Dialogs_listMessages__qNZR+\",\"message\":\"Dialogs_message__hF7xt\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React, {FC} from \"react\";\r\n\r\nexport type DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n};\r\n\r\n\r\nconst DialogItem: FC<DialogItemPropsType> = ({name,id}) => {\r\n    return (\r\n        <div className={s.dialog}><NavLink to={`/dialogs/${id}`}>{name}</NavLink></div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nexport type MessagePropsType = {\r\n    titleMessage: string\r\n    id: string\r\n};\r\n\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.message}>{props.titleMessage}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React, {FC} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {dialogsDataType, messagesType} from \"../../redux/dialogs-reducer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Button} from \"@mantine/core\";\r\nimport {Textarea} from \"../../ValidationRules/ReduxTextarea\";\r\nimport {maxLengthCreator, requiredField} from \"../../ValidationRules/validation\";\r\n\r\n\r\ntype DialogsType = {\r\n    sendMessage: (messageBody: string) => void\r\n    dialogs: dialogsDataType[]\r\n    messages: messagesType[]\r\n    newMessageBody: string\r\n}\r\n\r\nconst Dialogs: FC<DialogsType> = (props) => {\r\n\r\n    const {\r\n        sendMessage,\r\n        dialogs,\r\n        messages,\r\n        newMessageBody,\r\n    } = props\r\n\r\n    let Dialogs = dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>);\r\n    let Messages = messages.map(m => <Message key={m.id} titleMessage={m.message} id={m.id}/>);\r\n\r\n    const Submit = (values: FormDataType) => {\r\n        sendMessage(values.messageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.listDialogs}>\r\n                {Dialogs}\r\n            </div>\r\n            <div className={s.listMessages}>\r\n                <div>{Messages}</div>\r\n                <AddMessageFormRedux onSubmit={Submit}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\ntype FormDataType = {\r\n    messageBody: string\r\n}\r\n\r\nconst ml100 = maxLengthCreator(100)\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[requiredField,  ml100]}\r\n                       name={'messageBody'}\r\n                       placeholder={'Enter your message'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button type={'submit'}>Send</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<FormDataType>({form: 'DialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {dialogsDataType, messagesType, sendMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {isAuthRedirectHoc} from \"../../HOC/IsAuthRedirectHOC\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype ObjFromMapState = {\r\n    dialogs: Array<dialogsDataType>\r\n    messages: Array<messagesType>\r\n    newMessageBody: string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): ObjFromMapState => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n        newMessageBody: state.messagesPage.newMessageText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        sendMessage: (messageBody: string) => {\r\n            dispatch(sendMessageAC(messageBody))\r\n        }\r\n    }\r\n}\r\n//export default isAuthRedirectHoc (connect(mapStateToProps, mapDispatchToProps)(Dialogs))  //new version\r\n//export const DialogsContainerRR = connect(mapStateToProps, mapDispatchToProps)(Dialogs)// old version\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    isAuthRedirectHoc,\r\n    connect(mapStateToProps, mapDispatchToProps))\r\n(Dialogs)\r\n\r\n\r\n\r\n\r\n"],"names":["name","id","className","s","to","props","titleMessage","ml100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Button","type","sendMessage","dialogs","messages","Dialogs","newMessageBody","map","dialog","Messages","m","message","values","messageBody","compose","isAuthRedirectHoc","connect","state","messagesPage","newMessageText","dispatch","sendMessageAC"],"sourceRoot":""}